
main5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000162  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000031  00000000  00000000  000001d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000302  00000000  00000000  00000207  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000140  00000000  00000000  00000509  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000205  00000000  00000000  00000649  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000850  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d0  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000083  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7d 00 	call	0xfa	; 0xfa <main>
  64:	0c 94 af 00 	jmp	0x15e	; 0x15e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <display>:
#include<avr/io.h>
#include<util/delay.h>
#define delaya 10

void display(unsigned char seg,unsigned char data){
PORTD=0xff;
  6c:	9f ef       	ldi	r25, 0xFF	; 255
  6e:	92 bb       	out	0x12, r25	; 18
PORTC=data;
  70:	65 bb       	out	0x15, r22	; 21
PORTD=seg;  
  72:	82 bb       	out	0x12, r24	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  74:	80 e2       	ldi	r24, 0x20	; 32
  76:	9e e4       	ldi	r25, 0x4E	; 78
  78:	01 97       	sbiw	r24, 0x01	; 1
  7a:	f1 f7       	brne	.-4      	; 0x78 <display+0xc>
_delay_ms(10);
}
  7c:	08 95       	ret

0000007e <calcu>:

void calcu(int given){
  7e:	fc 01       	movw	r30, r24
int c = (given/100)%10;
int d = given/1000;

int s[4]={0xfe,0xfd,0xfb,0x07};

display(s[0], d);
  80:	68 ee       	ldi	r22, 0xE8	; 232
  82:	73 e0       	ldi	r23, 0x03	; 3
  84:	0e 94 88 00 	call	0x110	; 0x110 <__divmodhi4>
#include<avr/io.h>
#include<util/delay.h>
#define delaya 10

void display(unsigned char seg,unsigned char data){
PORTD=0xff;
  88:	4f ef       	ldi	r20, 0xFF	; 255
  8a:	42 bb       	out	0x12, r20	; 18
PORTC=data;
  8c:	65 bb       	out	0x15, r22	; 21
PORTD=seg;  
  8e:	8e ef       	ldi	r24, 0xFE	; 254
  90:	82 bb       	out	0x12, r24	; 18
  92:	20 e2       	ldi	r18, 0x20	; 32
  94:	3e e4       	ldi	r19, 0x4E	; 78
  96:	c9 01       	movw	r24, r18
  98:	01 97       	sbiw	r24, 0x01	; 1
  9a:	f1 f7       	brne	.-4      	; 0x98 <calcu+0x1a>
int d = given/1000;

int s[4]={0xfe,0xfd,0xfb,0x07};

display(s[0], d);
display(s[1], c);
  9c:	cf 01       	movw	r24, r30
  9e:	64 e6       	ldi	r22, 0x64	; 100
  a0:	70 e0       	ldi	r23, 0x00	; 0
  a2:	0e 94 88 00 	call	0x110	; 0x110 <__divmodhi4>
  a6:	cb 01       	movw	r24, r22
  a8:	6a e0       	ldi	r22, 0x0A	; 10
  aa:	70 e0       	ldi	r23, 0x00	; 0
  ac:	0e 94 88 00 	call	0x110	; 0x110 <__divmodhi4>
#include<avr/io.h>
#include<util/delay.h>
#define delaya 10

void display(unsigned char seg,unsigned char data){
PORTD=0xff;
  b0:	42 bb       	out	0x12, r20	; 18
PORTC=data;
  b2:	85 bb       	out	0x15, r24	; 21
PORTD=seg;  
  b4:	8d ef       	ldi	r24, 0xFD	; 253
  b6:	82 bb       	out	0x12, r24	; 18
  b8:	c9 01       	movw	r24, r18
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <calcu+0x3c>

int s[4]={0xfe,0xfd,0xfb,0x07};

display(s[0], d);
display(s[1], c);
display(s[2], b);
  be:	cf 01       	movw	r24, r30
  c0:	6a e0       	ldi	r22, 0x0A	; 10
  c2:	70 e0       	ldi	r23, 0x00	; 0
  c4:	0e 94 88 00 	call	0x110	; 0x110 <__divmodhi4>
  c8:	cb 01       	movw	r24, r22
  ca:	6a e0       	ldi	r22, 0x0A	; 10
  cc:	70 e0       	ldi	r23, 0x00	; 0
  ce:	0e 94 88 00 	call	0x110	; 0x110 <__divmodhi4>
#include<avr/io.h>
#include<util/delay.h>
#define delaya 10

void display(unsigned char seg,unsigned char data){
PORTD=0xff;
  d2:	42 bb       	out	0x12, r20	; 18
PORTC=data;
  d4:	85 bb       	out	0x15, r24	; 21
PORTD=seg;  
  d6:	8b ef       	ldi	r24, 0xFB	; 251
  d8:	82 bb       	out	0x12, r24	; 18
  da:	c9 01       	movw	r24, r18
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <calcu+0x5e>
int s[4]={0xfe,0xfd,0xfb,0x07};

display(s[0], d);
display(s[1], c);
display(s[2], b);
display(s[3], a);
  e0:	cf 01       	movw	r24, r30
  e2:	6a e0       	ldi	r22, 0x0A	; 10
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	0e 94 88 00 	call	0x110	; 0x110 <__divmodhi4>
#include<avr/io.h>
#include<util/delay.h>
#define delaya 10

void display(unsigned char seg,unsigned char data){
PORTD=0xff;
  ea:	42 bb       	out	0x12, r20	; 18
PORTC=data;
  ec:	85 bb       	out	0x15, r24	; 21
PORTD=seg;  
  ee:	87 e0       	ldi	r24, 0x07	; 7
  f0:	82 bb       	out	0x12, r24	; 18
  f2:	c9 01       	movw	r24, r18
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <calcu+0x76>

display(s[0], d);
display(s[1], c);
display(s[2], b);
display(s[3], a);
}
  f8:	08 95       	ret

000000fa <main>:


int main(){

DDRC = DDRC | 0b11111111;
  fa:	84 b3       	in	r24, 0x14	; 20
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	84 bb       	out	0x14, r24	; 20
DDRD = DDRD | 0b00001111;
 100:	81 b3       	in	r24, 0x11	; 17
 102:	8f 60       	ori	r24, 0x0F	; 15
 104:	81 bb       	out	0x11, r24	; 17
while(1){

calcu(823);
 106:	87 e3       	ldi	r24, 0x37	; 55
 108:	93 e0       	ldi	r25, 0x03	; 3
 10a:	0e 94 3f 00 	call	0x7e	; 0x7e <calcu>
 10e:	fb cf       	rjmp	.-10     	; 0x106 <main+0xc>

00000110 <__divmodhi4>:
 110:	97 fb       	bst	r25, 7
 112:	09 2e       	mov	r0, r25
 114:	07 26       	eor	r0, r23
 116:	0a d0       	rcall	.+20     	; 0x12c <__divmodhi4_neg1>
 118:	77 fd       	sbrc	r23, 7
 11a:	04 d0       	rcall	.+8      	; 0x124 <__divmodhi4_neg2>
 11c:	0c d0       	rcall	.+24     	; 0x136 <__udivmodhi4>
 11e:	06 d0       	rcall	.+12     	; 0x12c <__divmodhi4_neg1>
 120:	00 20       	and	r0, r0
 122:	1a f4       	brpl	.+6      	; 0x12a <__divmodhi4_exit>

00000124 <__divmodhi4_neg2>:
 124:	70 95       	com	r23
 126:	61 95       	neg	r22
 128:	7f 4f       	sbci	r23, 0xFF	; 255

0000012a <__divmodhi4_exit>:
 12a:	08 95       	ret

0000012c <__divmodhi4_neg1>:
 12c:	f6 f7       	brtc	.-4      	; 0x12a <__divmodhi4_exit>
 12e:	90 95       	com	r25
 130:	81 95       	neg	r24
 132:	9f 4f       	sbci	r25, 0xFF	; 255
 134:	08 95       	ret

00000136 <__udivmodhi4>:
 136:	aa 1b       	sub	r26, r26
 138:	bb 1b       	sub	r27, r27
 13a:	51 e1       	ldi	r21, 0x11	; 17
 13c:	07 c0       	rjmp	.+14     	; 0x14c <__udivmodhi4_ep>

0000013e <__udivmodhi4_loop>:
 13e:	aa 1f       	adc	r26, r26
 140:	bb 1f       	adc	r27, r27
 142:	a6 17       	cp	r26, r22
 144:	b7 07       	cpc	r27, r23
 146:	10 f0       	brcs	.+4      	; 0x14c <__udivmodhi4_ep>
 148:	a6 1b       	sub	r26, r22
 14a:	b7 0b       	sbc	r27, r23

0000014c <__udivmodhi4_ep>:
 14c:	88 1f       	adc	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	5a 95       	dec	r21
 152:	a9 f7       	brne	.-22     	; 0x13e <__udivmodhi4_loop>
 154:	80 95       	com	r24
 156:	90 95       	com	r25
 158:	bc 01       	movw	r22, r24
 15a:	cd 01       	movw	r24, r26
 15c:	08 95       	ret

0000015e <_exit>:
 15e:	f8 94       	cli

00000160 <__stop_program>:
 160:	ff cf       	rjmp	.-2      	; 0x160 <__stop_program>
